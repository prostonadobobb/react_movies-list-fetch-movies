{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","hasError","setHasError","setMovie","isLoading","setIsLoading","console","log","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Plot","Poster","imdbID","disabled","every","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06bc1143.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[] ;\n  setMovies: (movie: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // eslint-disable-next-line no-console\n  console.log(movie);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n    setQuery(event.target.value);\n  };\n\n  function handleAddToList() {\n    if (movie !== null && movies.every(item => item.imdbId !== movie.imdbId)) {\n      setMovies([...movies, movie]);\n    }\n\n    setHasError(false);\n    setMovie(null);\n    setQuery('');\n  }\n\n  function handleSubmit() {\n    setIsLoading(true);\n    getMovie(query)\n      .then((data: MovieData | ResponseError) => {\n        if ('Error' in data) {\n          setHasError(true);\n          setMovie(null);\n        } else {\n          setHasError(false);\n          setMovie({\n            title: data.Title,\n            description: data.Plot,\n            imgUrl: data.Poster === 'N/A'\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : data.Poster,\n            imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n            imdbId: data.imdbID,\n          });\n        }\n\n        setIsLoading(false);\n      });\n  }\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => event.preventDefault()}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': hasError })}\n              value={query}\n              onChange={handleInputChange}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light', {\n                'is-loading': isLoading,\n              })}\n              onClick={handleSubmit}\n              disabled={query === ''}\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=5d25026f';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}